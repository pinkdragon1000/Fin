{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/api.service.ts","webpack:///src/app/components/page-content/account.component.ts","webpack:///src/app/components/page-content/add-accounts.component.ts","webpack:///src/app/components/page-content/manage-accounts.component.ts","webpack:///src/app/components/page-content/signin.component.ts","webpack:///src/app/components/page-content/signup.component.ts","webpack:///src/app/components/page-template/headerpagetemplate.component.ts","webpack:///src/app/components/page-template/pagetemplate.component.ts","webpack:///src/app/components/small-components/add-transaction-modal-button.component.ts","webpack:///src/app/components/small-components/add-transaction-modal.component.ts","webpack:///src/app/components/small-components/add-transaction-modal.service.ts","webpack:///src/app/components/small-components/clickable-list-view.component.ts","webpack:///src/app/components/small-components/empty-content.component.ts","webpack:///src/app/components/small-components/header.component.ts","webpack:///src/app/components/small-components/help-modal-button.component.ts","webpack:///src/app/components/small-components/help-modal.component.ts","webpack:///src/app/components/small-components/help-modal.service.ts","webpack:///src/app/components/small-components/input.component.ts","webpack:///src/app/components/small-components/navbar.component.ts","webpack:///src/app/components/small-components/tab.component.ts","webpack:///src/app/components/small-components/tabs.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","template","styles","AppModule","declarations","providers","bootstrap","schemas","APIService","http","callback","headers","Authorization","btoa","get","observe","subscribe","response","userResult","body","post","console","log","msg","error","accountsResult","pipe","res","transactionsResult","AccountComponent","apiService","currentUser","accountFieldData","label","placeholder","type","name","min","accountIDnum","parseInt","window","location","search","substring","transactionType","transactionDate","document","getElementById","value","transactionAmount","postTransactionData","reload","accountID","toString","getAccountDataAsync","d","accountDescription","account_Description","accountDeposits","deposit_amount","accountWithdraws","withdraw_amount","accountUser","user_id","accountStartingAmount","account_Starting_Amount","getTransactionDataAsync","transactionData","AddAccountsComponent","startingAmount","accountTypeNum","accountType","postAccountData","ManageAccountsComponent","userId","accountData","SigninComponent","inputFieldData","loginData","password","email","postValidateUser","includes","undefined","href","signIn","SignupComponent","signupFieldData","fullName","hashedPassword","update","digest","postUserData","HeaderPageTemplateComponent","PageTemplateComponent","getUserData","userData","AddTransactionButtonComponent","modalService","open","close","openModal","closeModal","AddTransactionModalComponent","addTransactionModalService","el","element","nativeElement","appendChild","addEventListener","target","className","add","remove","style","display","classList","encapsulation","None","AddTransactionModalService","modals","modal","push","filter","x","find","providedIn","ClickableListViewComponent","EmptyContentComponent","HeaderComponent","HelpModalButtonComponent","ModalComponent","ModalService","InputComponent","required","NavbarComponent","TabComponent","active","TabsComponent","activeTabs","tabs","tab","length","selectTab","first","toArray","forEach","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AddAccountsComponent } from './components/page-content/add-accounts.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SigninComponent } from './components/page-content/signin.component';\nimport { SignupComponent } from './components/page-content/signup.component';\nimport { ManageAccountsComponent } from './components/page-content/manage-accounts.component';\nimport { AccountComponent } from './components/page-content/account.component';\n\nconst routes: Routes = [\n  { path: '', component: SigninComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'addAccounts', component: AddAccountsComponent },\n  { path: 'manageAccounts', component: ManageAccountsComponent },\n  { path: 'account', component: AccountComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``],\n})\nexport class AppComponent {\n  title = 'fin';\n}\n","import { AddTransactionModalComponent } from './components/small-components/add-transaction-modal.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { PageTemplateComponent } from './components/page-template/pagetemplate.component';\nimport { HeaderPageTemplateComponent } from './components/page-template/headerpagetemplate.component';\n\nimport { ManageAccountsComponent } from './components/page-content/manage-accounts.component';\nimport { AddAccountsComponent } from './components/page-content/add-accounts.component';\nimport { AccountComponent } from './components/page-content/account.component';\nimport { SigninComponent } from './components/page-content/signin.component';\nimport { SignupComponent } from './components/page-content/signup.component';\n\nimport { NavbarComponent } from './components/small-components/navbar.component';\nimport { HeaderComponent } from './components/small-components/header.component';\nimport { ClickableListViewComponent } from './components/small-components/clickable-list-view.component';\n\nimport { ModalComponent } from './components/small-components/help-modal.component';\nimport { HelpModalButtonComponent } from './components/small-components/help-modal-button.component';\nimport { EmptyContentComponent } from './components/small-components/empty-content.component';\nimport { InputComponent } from './components/small-components/input.component';\n\nimport { APIService } from './components/api.service';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddTransactionButtonComponent } from './components/small-components/add-transaction-modal-button.component';\nimport { TabsComponent } from './components/small-components/tabs.component';\nimport { TabComponent } from './components/small-components/tab.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//import { BarComponent } from './components/page-content/bar.component';\n//import { BarComponent1 } from './components/page-content/bar.component1';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputComponent,\n    HeaderPageTemplateComponent,\n    PageTemplateComponent,\n    EmptyContentComponent,\n    NavbarComponent,\n    HeaderComponent,\n    SigninComponent,\n    SignupComponent,\n    ManageAccountsComponent,\n    AddAccountsComponent,\n    AccountComponent,\n    AddTransactionModalComponent,\n    AddTransactionButtonComponent,\n    TabsComponent,\n    TabComponent,\n    ModalComponent,\n    HelpModalButtonComponent,\n    ClickableListViewComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    InputComponent,\n    PageTemplateComponent,\n    EmptyContentComponent,\n    HeaderPageTemplateComponent,\n    APIService,\n    NavbarComponent,\n    HeaderComponent,\n    ClickableListViewComponent,\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class APIService {\n  userResult: Object;\n  accountsResult: Object;\n  transactionsResult: Object;\n  msg: string;\n\n  constructor(private http: HttpClient) {}\n\n  getUserData(callback: any) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:0p3n$esame21'),\n    };\n    this.http\n      .get('http://localhost:8080/fin-accounts.webservice/users', {\n        headers,\n        observe: 'response',\n      })\n      //.pipe(map((res) => res))\n      .subscribe((response) => {\n        this.userResult = response;\n        callback(this.userResult);\n      });\n  }\n\n  postValidateUser(body: string): string {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:0p3n$esame21'),\n    };\n    this.http\n      .post(\n        'http://localhost:8080/fin-accounts.webservice/validateUser',\n        body,\n        {\n          headers,\n          observe: 'response',\n        }\n      )\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n          this.msg = 'success';\n          return this.msg;\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n          console.log(error);\n          this.msg = 'error';\n          return this.msg;\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n    return this.msg;\n  }\n\n  getAccountDataAsync(callback: any) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:0p3n$esame21'),\n    };\n    this.http\n      .get('http://localhost:8080/fin-accounts.webservice/accounts', {\n        headers,\n        observe: 'response',\n      })\n      //.pipe(map((res) => res))\n      .subscribe((response) => {\n        this.accountsResult = response;\n        callback(this.accountsResult);\n        console.log(this.accountsResult);\n      });\n  }\n\n  getTransactionDataAsync(callback: any) {\n    this.http\n      .get('http://localhost:8080/fin-accounts.webservice/transactions')\n      .pipe(map((res) => res))\n      .subscribe((res) => {\n        this.transactionsResult = res;\n        callback(this.transactionsResult);\n        console.log(this.transactionsResult);\n      });\n  }\n\n  postUserData(body: string) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    this.http\n      .post('http://localhost:8080//fin-accounts.webservice/addUser', body, {\n        headers,\n        observe: 'response',\n      })\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n\n  postAccountData(body: string) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    this.http\n      .post('http://localhost:8080/fin-accounts.webservice/addAccount', body, {\n        headers,\n        observe: 'response',\n      })\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n\n  postTransactionDataTest() {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    const body =\n      '{\"account_id\":{\"account_id\": 1}, \"transaction_type\": \"Deposit\", \"transaction_date\": \"2021-09-18\", \"transaction_amount\": 20, \"transaction_subTotal\": 0}';\n    this.http\n      .post(\n        'http://localhost:8080/fin-accounts.webservice/addTransaction',\n        body,\n        {\n          headers,\n          observe: 'response',\n        }\n      )\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n\n  postTransactionData(body: string) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    this.http\n      .post(\n        'http://localhost:8080/fin-accounts.webservice/addTransaction',\n        body,\n        {\n          headers,\n          observe: 'response',\n        }\n      )\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n}\n","import { APIService } from './../api.service';\nimport { Component, OnInit } from '@angular/core';\n//import { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-account-component',\n  template: `\n    <app-page-template\n      [pagedirections]=\"'Click on an account to view and add information'\"\n      [pagetitle]=\"this.accountDescription\"\n    >\n      <app-add-transaction-button-component modalAccountText=\"\">\n        <div class=\"input\" *ngFor=\"let input of accountFieldData\">\n          <app-input-component\n            [label]=\"input.label\"\n            [placeholder]=\"input.placeholder\"\n            [type]=\"input.type\"\n            [name]=\"input.name\"\n            [min]=\"input.min\"\n            [id]=\"input.id\"\n          ></app-input-component>\n        </div>\n        <label>Transaction Type </label>\n        <br />\n        <select class=\"select\">\n          <option value=\"0\">Select your transaction type</option>\n          <option value=\"1\">Deposit</option>\n          <option value=\"2\">Withdraw</option>\n        </select>\n        <br />\n        <button\n          type=\"submit\"\n          class=\"primary round\"\n          (click)=\"postTransactionData()\"\n        >\n          Submit Transaction\n        </button>\n      </app-add-transaction-button-component>\n\n      <p>Transactions</p>\n      <div class=\"scroll\">\n        <table>\n          <tr>\n            <th>Transaction Date</th>\n            <th>Transaction Type</th>\n            <th>Transaction Amount</th>\n            <th>Sub-Total</th>\n          </tr>\n\n          <tr\n            *ngFor=\"let transaction of transactionData\"\n            [ngClass]=\"{\n              'text-deposit': transaction.transaction_type === 'Deposit',\n              'text-withdraw': transaction.transaction_type === 'Withdraw'\n            }\"\n          >\n            <ng-container\n              *ngIf=\"\n                accountUser === currentUser &&\n                transaction.account_id === accountIDnum\n              \"\n            >\n              <td>{{ transaction.transaction_date }}</td>\n              <td>{{ transaction.transaction_type }}</td>\n              <td\n                [ngClass]=\"{\n                  'text-deposit-arrow':\n                    transaction.transaction_type === 'Deposit',\n                  'text-withdraw-arrow':\n                    transaction.transaction_type === 'Withdraw'\n                }\"\n              >\n                \\${{ transaction.transaction_amount }}\n              </td>\n              <td>\\${{ transaction.transaction_subTotal }}</td>\n            </ng-container>\n          </tr>\n        </table>\n      </div>\n      <br />\n      <br />\n      <p>Overall Account Summary</p>\n      <table>\n        <tr>\n          <th>Account Starting Amount</th>\n          <th>Account Deposits</th>\n          <th>Account Withdraws</th>\n          <th>Account Current Amount</th>\n          <th>Overall Account Difference</th>\n        </tr>\n        <tr>\n          <td>\\${{ this.accountStartingAmount }}</td>\n          <td>\\${{ this.accountDeposits }}</td>\n          <td>\\${{ this.accountWithdraws }}</td>\n          <td>\n            \\${{ this.transactionData.slice(-1).pop().transaction_subTotal }}\n          </td>\n          <td>\n            \\${{\n              this.transactionData.slice(-1).pop().transaction_subTotal -\n                this.accountStartingAmount\n            }}\n          </td>\n        </tr>\n      </table>\n    </app-page-template>\n  `,\n  styles: [\n    `\n      .scroll {\n        height: 10rem;\n        overflow-y: scroll;\n      }\n      .clickable-view {\n        margin: 0.625rem;\n      }\n\n      .inputs {\n        align-items: center;\n      }\n      .input {\n        width: 50%;\n      }\n      .select {\n        width: 52%;\n      }\n\n      .row {\n        padding-right: 5rem;\n      }\n\n      .text-deposit {\n        color: green;\n      }\n\n      .text-withdraw {\n        color: #a10a28;\n      }\n\n      .text-deposit-arrow::before {\n        font-family: 'Font Awesome 5 Free';\n        content: '↑';\n      }\n\n      .text-withdraw-arrow::before {\n        font-family: 'Font Awesome 5 Free';\n        content: '↓';\n      }\n\n      select {\n        border-radius: 20rem;\n        font-size: 1rem;\n        height: 1.5rem;\n        min-width: 15rem;\n        width: 100%;\n        height: 3.25rem;\n        padding: 0rem 1rem;\n        border: 0.063rem solid var(--fin-white);\n        margin: 0.5rem 0;\n        background: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n\n      table {\n        border-collapse: collapse;\n        width: 100%;\n      }\n\n      th {\n        background-color: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n\n      td,\n      th {\n        border: 0.063rem solid #dddddd;\n        text-align: left;\n        padding: 0.5rem;\n      }\n    `,\n  ],\n})\nexport class AccountComponent implements OnInit {\n  accountStartingAmount: number;\n  accountDeposits: string;\n  accountWithdraws: string;\n  accountID: string;\n  accountIDnum: number;\n  accountDescription: string;\n  transactionId: string;\n  accountUser: number;\n\n  currentUser = 1;\n\n  transactionData: Array<any>;\n\n  accountFieldData = [\n    {\n      label: 'Transaction Amount',\n      placeholder: 'Type in your transaction amount',\n      type: 'number',\n      name: 'amount',\n      min: 0,\n      id: 'amount',\n    },\n    {\n      label: 'Transaction Group',\n      placeholder: 'Type in your transaction group',\n      type: 'text',\n      name: 'transaction group',\n      id: 'group',\n    },\n    {\n      label: 'Transaction Date',\n      placeholder: 'Type in your transaction date',\n      type: 'date',\n      name: 'date',\n      id: 'date',\n    },\n  ];\n\n  constructor(private apiService: APIService) {}\n  postTransactionData() {\n    this.accountIDnum = parseInt(window.location.search.substring(4), 10);\n    const transactionType = 'Deposit';\n    const transactionDate = (\n      document.getElementById('date') as HTMLInputElement\n    ).value;\n\n    const transactionAmount = (\n      document.getElementById('amount') as HTMLInputElement\n    ).value;\n\n    console.log(transactionDate);\n\n    const body =\n      '{\"account_id\":{\"account_id\":' +\n      this.accountIDnum +\n      '}, \"transaction_type\":' +\n      transactionType +\n      ', \"transaction_date\":' +\n      transactionDate +\n      ', \"transaction_amount\":' +\n      transactionAmount +\n      ', \"transaction_subTotal\": 0}';\n    this.apiService.postTransactionData(body);\n    location.reload();\n  }\n\n  ngOnInit() {\n    this.accountIDnum = parseInt(window.location.search.substring(4), 10);\n    this.accountID = (\n      parseInt(window.location.search.substring(4), 10) - 1\n    ).toString();\n\n    this.apiService.getAccountDataAsync((d: Object) => {\n      this.accountDescription = d[this.accountID].account_Description;\n      this.accountDeposits = d[this.accountID].deposit_amount;\n      this.accountWithdraws = d[this.accountID].withdraw_amount;\n      this.accountUser = d[this.accountID].user_id;\n      this.accountStartingAmount = d[this.accountID].account_Starting_Amount;\n    });\n\n    this.apiService.getTransactionDataAsync((d: Array<any>) => {\n      this.transactionData = d;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from './../api.service';\nimport { userId } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-accounts-content-component',\n  template: `\n    <app-page-template\n      [pagetitle]=\"'Add Accounts'\"\n      [pagedirections]=\"\n        'Fill out the form to add an account. To view and manage accounts click\n    Manage Accounts in the navbar.'\n      \"\n    >\n      <div *ngIf=\"error\" [innerHTML]=\"error\" class=\"error\"></div>\n      <form>\n        <div class=\"inputs\">\n          <label>Account Type (checking/savings)</label>\n          <br />\n          <select class=\"select\" id=\"select\">\n            <option value=\"0\">Select your account type</option>\n            <option value=\"1\">Checking</option>\n            <option value=\"2\">Savings</option>\n          </select>\n          <div class=\"input\" *ngFor=\"let input of accountFieldData\">\n            <app-input-component\n              [label]=\"input.label\"\n              [placeholder]=\"input.placeholder\"\n              [type]=\"input.type\"\n              [name]=\"input.name\"\n              [min]=\"input.min\"\n              [id]=\"input.id\"\n            ></app-input-component>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary round\" (click)=\"postAccountData()\">\n          Add Account\n        </button>\n      </form>\n    </app-page-template>\n  `,\n  styles: [\n    `\n      .inputs {\n        align-items: center;\n      }\n      .input {\n        width: 50%;\n      }\n      .select {\n        width: 52%;\n      }\n\n      select {\n        border-radius: 20rem;\n        font-size: 1rem;\n        height: 1.5rem;\n        min-width: 15rem;\n        width: 100%;\n        height: 3.25rem;\n        padding: 0rem 1rem;\n        border: 0.063rem solid var(--fin-white);\n        margin: 0.5rem 0;\n        background: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n    `,\n  ],\n})\nexport class AddAccountsComponent implements OnInit {\n  error: string;\n  startingAmount: any = 0;\n  accountDescription: string;\n  accountTypeNum: any;\n  accountType: string;\n\n  constructor(private apiService: APIService) {}\n\n  accountFieldData = [\n    {\n      label: 'Account Description (Example: TD Bank Checking)',\n      placeholder: 'Type in your account description',\n      type: 'text',\n      name: 'description',\n      id: 'description',\n      min: 0,\n    },\n    {\n      label: 'Account Starting Amount ($)',\n      placeholder: 'Type in your account starting amount',\n      type: 'number',\n      name: 'amount',\n      id: 'amount',\n      min: 1,\n    },\n  ];\n\n  postAccountData() {\n    this.accountTypeNum = (\n      document.getElementById('select') as HTMLInputElement\n    ).value;\n    if (this.accountTypeNum === 1) {\n      this.accountType = 'Checking';\n    } else if (this.accountTypeNum === 2) {\n      this.accountType = 'Savings';\n    }\n    this.accountDescription = (\n      document.getElementById('description') as HTMLInputElement\n    ).value;\n    this.startingAmount = (\n      document.getElementById('amount') as HTMLInputElement\n    ).value;\n\n    if (\n      this.accountTypeNum === 0 ||\n      this.startingAmount === 0 ||\n      this.accountDescription === ''\n    ) {\n      this.error =\n        'Invalid inputs provided.  Please fill out all field inputs.';\n    } else {\n      const body =\n        '{\"user_id\":{\"user_id\":' +\n        userId +\n        '}, \"account_Type\": \"' +\n        this.accountType +\n        '\", \"account_Starting_Amount\": ' +\n        this.startingAmount +\n        ', \"account_Description\": \"' +\n        this.accountDescription +\n        '\", \"deposit_amount\": 0, \"withdraw_amount\": 0}';\n\n      console.log(body);\n\n      this.apiService.postAccountData(body);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","import { userId } from './../../../environments/environment';\nimport { APIService } from './../api.service';\nimport { Component, OnInit, Input } from '@angular/core';\n@Component({\n  selector: 'app-manage-accounts-content-component',\n  template: `\n    <app-page-template\n      [pagetitle]=\"'Manage Accounts'\"\n      [pagedirections]=\"'Click on an account to view and add information'\"\n    >\n      <div *ngIf=\"accountData\">\n        <p class=\"align-right\">Account Current Amount</p>\n        <div *ngFor=\"let account of accountData\" class=\"clickable-view\">\n          <div *ngIf=\"account.user_id === userId\">\n            <app-clickable-list-view\n              [name]=\"account.account_Description\"\n              [link]=\"'/account?id='.concat(account.account_id)\"\n              [amount]=\"account.account_Starting_Amount.toLocaleString('en-GB')\"\n            >\n            </app-clickable-list-view>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"!accountData\">\n        <app-emptycontent\n          emptyHeader=\"No Accounts Yet\"\n          emptyPar=\"Click 'Add Accounts' in the navbar to add an account. \"\n        ></app-emptycontent>\n      </div>\n    </app-page-template>\n  `,\n  styles: [\n    `\n      .align-right {\n        text-align: right;\n        margin-right: 10rem;\n      }\n      .clickable-view {\n        margin: 0.625rem;\n      }\n    `,\n  ],\n})\nexport class ManageAccountsComponent implements OnInit {\n  accountData: Object;\n  userId: any = userId;\n  constructor(private apiService: APIService) {}\n\n  ngOnInit(): void {\n    this.apiService.getAccountDataAsync((d: Object) => {\n      this.accountData = d;\n    });\n  }\n}\n","import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { APIService } from '../api.service';\n\n@Component({\n  selector: 'app-login-content-component',\n  template: `\n    <app-header-page-template class=\"signin\" [pagetitle]=\"'Sign In'\">\n      <div *ngIf=\"error\" [innerHTML]=\"error\" class=\"error\"></div>\n\n      <div class=\"inputs\" *ngFor=\"let input of inputFieldData\">\n        <app-input-component\n          [label]=\"input.label\"\n          [placeholder]=\"input.placeholder\"\n          [id]=\"input.id\"\n          [type]=\"input.type\"\n          [name]=\"input.name\"\n        ></app-input-component>\n      </div>\n\n      <div class=\"login-button\">\n        <button type=\"submit\" class=\"primary round\" (click)=\"signIn()\">\n          Sign In\n        </button>\n      </div>\n      <a href=\"/signup\">Don't have an account? Signup -> </a>\n    </app-header-page-template>\n  `,\n  styles: [\n    `\n      .login-button {\n        display: flex;\n        justify-content: center;\n        width: 70%;\n      }\n\n      .inputs {\n        width: 30%;\n      }\n    `,\n  ],\n})\nexport class SigninComponent implements OnInit {\n  email: string;\n  password: string;\n  error: string;\n  response: any;\n  user: string;\n  inputFieldData = [\n    {\n      label: 'Email',\n      placeholder: 'Type in your email',\n      type: 'email',\n      name: 'email',\n      id: 'email',\n    },\n    {\n      label: 'Password',\n      placeholder: 'Type in your password',\n      type: 'password',\n      name: 'password',\n      id: 'password',\n    },\n  ];\n\n  loginData = [\n    {\n      password: 'B!ah123',\n    },\n  ];\n  constructor(private apiService: APIService) {}\n\n  ngOnInit(): void {}\n\n  signIn() {\n    this.email = (document.getElementById('email') as HTMLInputElement).value;\n    this.password = (\n      document.getElementById('password') as HTMLInputElement\n    ).value;\n\n    if (this.email === '' || this.password === '') {\n      console.log('Please fill out all fields');\n    } else {\n      const body =\n        '{\"email\": \"' + this.email + '\", \"password\": \"' + this.password + '\"}';\n\n      console.log(body);\n      this.response = this.apiService.postValidateUser(body);\n\n      console.log(this.response);\n      if (!this.response.includes('error') || this.response !== undefined) {\n        console.log('yay');\n        location.href = '/manageAccounts';\n      } else {\n        console.log(\"can't authenticate\");\n        location.href = '/';\n      }\n    }\n\n    /*\n    console.log(this.email);\n    if (\n      this.email ==\n        (<HTMLInputElement>document.getElementById('email')).value &&\n      this.loginData[0].password ==\n        (<HTMLInputElement>document.getElementById('password')).value\n    ) {\n      console.log('Input matches account sign-in info!');\n      location.href = '/manageAccounts';\n    } else if (\n      this.email ==\n        (<HTMLInputElement>document.getElementById('email')).value &&\n      this.loginData[0].password !=\n        (<HTMLInputElement>document.getElementById('password')).value\n    ) {\n      this.error = 'Email exists but password is incorrect';\n      console.log('Email exists but password is incorrect');\n    } else if (\n      (<HTMLInputElement>document.getElementById('email')).value == '' &&\n      (<HTMLInputElement>document.getElementById('password')).value == ''\n    ) {\n      this.error = 'Please enter in a valid username and password';\n    } else if (\n      this.email != (<HTMLInputElement>document.getElementById('email')).value\n    ) {\n      this.error = \"Email doesn't exist.  Please signup first\";\n      console.log(\"Email doesn't exist.  Please signup first\");\n    }\n      */\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from './../api.service';\nimport * as shajs from 'sha.js';\n\n@Component({\n  selector: 'app-signup-content-component',\n  template: `\n    <app-header-page-template [pagetitle]=\"'Sign Up'\">\n      <form>\n        <div class=\"inputs\" *ngFor=\"let input of signupFieldData\">\n          <app-input-component\n            [label]=\"input.label\"\n            [placeholder]=\"input.placeholder\"\n            [type]=\"input.type\"\n            [name]=\"input.name\"\n            [id]=\"input.id\"\n          ></app-input-component>\n        </div>\n\n        <div class=\"login-button\">\n          <button type=\"submit\" class=\"primary round\" (click)=\"postUserData()\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n      <a href=\"/\">Already have an account? Login -> </a>\n    </app-header-page-template>\n  `,\n  styles: [\n    `\n      .login-button {\n        display: flex;\n        justify-content: center;\n        width: 70%;\n      }\n\n      .inputs {\n        width: 30%;\n      }\n    `,\n  ],\n})\nexport class SignupComponent implements OnInit {\n  fullName: string;\n  email: string;\n  password: string;\n  hashedPassword: string;\n  signupFieldData = [\n    {\n      label: 'Full Name',\n      placeholder: 'Type in your full name',\n      type: 'fname',\n      name: 'fname',\n      id: 'fname',\n    },\n    {\n      label: 'Email',\n      placeholder: 'Type in your email',\n      type: 'email',\n      name: 'email',\n      id: 'email',\n    },\n    {\n      label: 'Password',\n      placeholder: 'Type in your password',\n      type: 'password',\n      name: 'password',\n      id: 'password',\n    },\n  ];\n  constructor(private apiService: APIService) {}\n\n  postUserData() {\n    this.fullName = (\n      document.getElementById('fname') as HTMLInputElement\n    ).value;\n    this.email = (document.getElementById('email') as HTMLInputElement).value;\n    this.password = (\n      document.getElementById('password') as HTMLInputElement\n    ).value;\n\n    if (this.fullName === '' || this.email === '' || this.password === '') {\n      console.log('Please fill out all fields');\n    } else {\n      this.hashedPassword = shajs('sha256').update(this.password).digest('hex');\n\n      const body =\n        '{\"fullName\": \"' +\n        this.fullName +\n        '\", \"email\": \"' +\n        this.email +\n        '\", \"password\":\"' +\n        this.hashedPassword +\n        '\"}';\n\n      this.apiService.postUserData(body);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header-page-template',\n  template: `\n    <app-header-component\n      [maintitle]=\"'Fin'\"\n      [tagline]=\"'Financial Accounts Management'\"\n    ></app-header-component>\n    <div class=\"content\">\n      <div class=\"column login-signup-container\">\n        <h2 class=\"pagetitle\">{{ pagetitle }}</h2>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .content {\n        margin: 2rem 2rem 0rem 2rem;\n      }\n\n      .login-signup-container {\n        align-items: center;\n        margin-top: 5rem;\n      }\n    `,\n  ],\n})\nexport class HeaderPageTemplateComponent implements OnInit {\n  @Input() pagetitle: string;\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { APIService } from '../api.service';\n\n@Component({\n  selector: 'app-page-template',\n  template: `\n    <app-navbar-component\n      [childToMaster]=\"this.userData\"\n    ></app-navbar-component>\n    <div class=\"content\">\n      <h2 class=\"pagetitle\">{{ pagetitle }}</h2>\n      <p>{{ pagedirections }}</p>\n      <br />\n      <ng-content></ng-content>\n    </div>\n    <app-help-modal-button-component\n      [modaltext]=\"\n        'To add an account click Add An Account.  To view accounts click Manage Accounts.  To add transactions for a specific account click on that account.'\n      \"\n    ></app-help-modal-button-component>\n  `,\n  styles: [\n    `\n      .content {\n        margin: 2rem 2rem 0rem 2rem;\n      }\n    `,\n  ],\n})\nexport class PageTemplateComponent implements OnInit {\n  @Input() pagedirections: string;\n  @Input() pagetitle: string;\n  userData: string;\n\n  constructor(private apiService: APIService) {}\n\n  ngOnInit() {\n    this.apiService.getUserData((d: Object) => {\n      this.userData = d[0].fullName;\n    });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalService } from './help-modal.service';\n\n@Component({\n  selector: 'app-add-transaction-button-component',\n  template: `\n    <button (click)=\"openModal('custom-modal-2')\" class=\"primary round\">\n      Add Transaction\n    </button>\n\n    <app-modal-component id=\"custom-modal-2\">\n      <div class=\"float-right\">\n        <button class=\"secondary\" (click)=\"closeModal('custom-modal-2')\">\n          X\n        </button>\n      </div>\n      <ng-content></ng-content>\n    </app-modal-component>\n  `,\n  styles: [\n    `\n      .float-right {\n        float: right;\n      }\n    `,\n  ],\n})\nexport class AddTransactionButtonComponent implements OnInit {\n  @Input() modaltext: string;\n  constructor(private modalService: ModalService) {}\n  ngOnInit(): void {}\n\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { AddTransactionModalService } from './add-transaction-modal.service';\n\n@Component({\n  selector: 'app-add-transaction-modal',\n  template: `\n    <div class=\"modal\">\n      <div class=\"modal-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"modal-background\"></div>\n  `,\n  styles: [\n    `\n      modal {\n        display: none;\n      }\n      .modal {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1000;\n        overflow: auto;\n      }\n      .modal .modal-body {\n        padding: 1.25rem;\n        background: #fff;\n        margin: 16rem;\n        border-radius: 2rem;\n        min-height: 20rem;\n        max-width: 80rem;\n      }\n      .modal-background {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: var(--fin-black-transparent);\n        opacity: 0.75;\n        z-index: 900;\n      }\n      body.modal-open-2 {\n        overflow: hidden;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AddTransactionModalComponent implements OnInit, OnDestroy {\n  @Input() id: string;\n  private element: any;\n\n  constructor(\n    private addTransactionModalService: AddTransactionModalService,\n    private el: ElementRef\n  ) {\n    this.element = el.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // ensure id attribute exists\n    if (!this.id) {\n      console.error('modal must have an id');\n      return;\n    }\n\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\n    document.body.appendChild(this.element);\n\n    // close modal on background click\n    this.element.addEventListener('click', (el) => {\n      if (el.target.className === 'modal') {\n        this.close();\n      }\n    });\n\n    // add self (this modal instance) to the modal service so it's accessible from controllers\n    this.addTransactionModalService.add(this);\n  }\n\n  // remove self from modal service when component is destroyed\n  ngOnDestroy(): void {\n    this.addTransactionModalService.remove(this.id);\n    this.element.remove();\n  }\n\n  // open modal\n  open(): void {\n    this.element.style.display = 'block';\n    document.body.classList.add('modal-open');\n  }\n\n  // close modal\n  close(): void {\n    this.element.style.display = 'none';\n    document.body.classList.remove('modal-open');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AddTransactionModalService {\n  private modals: any[] = [];\n\n  add(modal: any) {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    // remove modal from array of active modals\n    this.modals = this.modals.filter((x) => x.id !== id);\n  }\n\n  open(id: string) {\n    // open modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.open();\n  }\n\n  close(id: string) {\n    // close modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.close();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n@Component({\n  selector: 'app-clickable-list-view',\n  template: `\n    <a href=\"{{ link }}\">\n      <div class=\"clickable-list\">\n        <div class=\"space-between\">\n          <p>{{ name }}</p>\n          <p>\\${{ amount }}</p>\n        </div>\n      </div>\n    </a>\n  `,\n  styles: [\n    `\n      div {\n        background: #efefef;\n        width: 90%;\n        padding: 1rem;\n        border-radius: 0.625rem;\n      }\n\n      .space-between {\n        display: flex;\n        justify-content: space-between;\n      }\n    `,\n  ],\n})\nexport class ClickableListViewComponent implements OnInit {\n  @Input() link: string;\n  @Input() amount: string;\n  @Input() name: string;\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n@Component({\n  selector: 'app-emptycontent',\n  template: `\n    <div class=\"wrapper\">\n      <img src=\"../../assets/empty.svg\" rel=\"icon\" alt=\"\" class=\"emptyicon\" />\n      <br />\n\n      <div class=\"row\">\n        <h3>{{ emptyHeader }}</h3>\n      </div>\n      <br />\n      <p class=\"space\">{{ emptyPar }}</p>\n    </div>\n  `,\n  styles: [\n    `\n      .emptyicon {\n        padding-left: 3rem;\n      }\n\n      .wrapper {\n        display: flex;\n        flex-direction: column;\n        padding: 4rem;\n        align-items: center;\n      }\n    `,\n  ],\n})\nexport class EmptyContentComponent implements OnInit {\n  @Input() emptyHeader: string;\n  @Input() emptyPar: string;\n\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header-component',\n  template: `\n    <div class=\"row hero\">\n      <div class=\"column center\">\n        <div class=\"row\">\n          <img src=\"../../assets/logo.svg\" rel=\"icon\" alt=\"\" class=\"logo\" />\n          <h1 class=\"fin\">{{ maintitle }}</h1>\n        </div>\n        <p class=\"tag-line\">{{ tagline }}</p>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .hero {\n        align-items: center;\n        background: var(--fin-gradient);\n        border-radius: 0rem 0rem 2rem 2rem;\n        justify-content: center;\n        padding: 6rem;\n      }\n\n      .fin {\n        color: var(--fin-white);\n        font-family: 'Courgette', cursive;\n        font-size: 4rem;\n        text-shadow: 0rem 0.125rem rgb(0 0 0 / 16%);\n        font-weight: 300;\n      }\n\n      .tag-line {\n        color: var(--fin-white);\n      }\n\n      img {\n        padding-right: 1rem;\n        width: 9.813rem;\n        height: 5.188rem;\n      }\n    `,\n  ],\n})\nexport class HeaderComponent implements OnInit {\n  @Input() maintitle: string;\n  @Input() tagline: string;\n\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalService } from './help-modal.service';\n\n@Component({\n  selector: 'app-help-modal-button-component',\n  template: `\n    <button class=\"btn-help\" (click)=\"openModal('custom-modal-1')\">?</button>\n\n    <app-modal-component id=\"custom-modal-1\">\n      <div class=\"float-right\">\n        <button class=\"secondary\" (click)=\"closeModal('custom-modal-1')\">\n          X\n        </button>\n      </div>\n      <p class=\"modaltext\">{{ modaltext }}</p>\n      <ng-content></ng-content>\n    </app-modal-component>\n  `,\n  styles: [\n    `\n      .float-right {\n        float: right;\n      }\n\n      .modaltext {\n        padding: 4rem;\n      }\n    `,\n  ],\n})\nexport class HelpModalButtonComponent implements OnInit {\n  @Input() modaltext: string;\n  constructor(private modalService: ModalService) {}\n\n  ngOnInit(): void {}\n\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { ModalService } from './help-modal.service';\n\n@Component({\n  selector: 'app-modal-component',\n  template: `\n    <div class=\"modal\">\n      <div class=\"modal-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"modal-background\"></div>\n  `,\n  styles: [\n    `\n      app-modal-component {\n        display: none;\n      }\n      .modal {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1000;\n        overflow: auto;\n      }\n      .modal .modal-body {\n        padding: 1.25rem;\n        background: #fff;\n        margin: 16rem;\n        border-radius: 0.625rem;\n        min-height: 20rem;\n        max-width: 80rem;\n      }\n      .modal-background {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: var(--fin-black-transparent);\n        opacity: 0.75;\n        z-index: 900;\n      }\n      body.modal-open {\n        overflow: hidden;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  @Input() id: string;\n  private element: any;\n\n  constructor(private modalService: ModalService, private el: ElementRef) {\n    this.element = el.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // ensure id attribute exists\n    if (!this.id) {\n      console.error('modal must have an id');\n      return;\n    }\n\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\n    document.body.appendChild(this.element);\n\n    // close modal on background click\n    this.element.addEventListener('click', (el) => {\n      if (el.target.className === 'modal') {\n        this.close();\n      }\n    });\n\n    // add self (this modal instance) to the modal service so it's accessible from controllers\n    this.modalService.add(this);\n  }\n\n  // remove self from modal service when component is destroyed\n  ngOnDestroy(): void {\n    this.modalService.remove(this.id);\n    this.element.remove();\n  }\n\n  // open modal\n  open(): void {\n    this.element.style.display = 'block';\n    document.body.classList.add('modal-open');\n  }\n\n  // close modal\n  close(): void {\n    this.element.style.display = 'none';\n    document.body.classList.remove('modal-open');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ModalService {\n  private modals: any[] = [];\n\n  add(modal: any) {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    // remove modal from array of active modals\n    this.modals = this.modals.filter((x) => x.id !== id);\n  }\n\n  open(id: string) {\n    // open modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.open();\n  }\n\n  close(id: string) {\n    // close modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.close();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-input-component',\n  template: `\n    <label>{{ label }}</label>\n\n    <input\n      placeholder=\"{{ placeholder }}\"\n      type=\"{{ type }}\"\n      name=\"{{ name }}\"\n      required=\"{{ required }}\"\n      min=\"{{ min }}\"\n      id=\"{{ id }}\"\n    />\n  `,\n\n  styles: [\n    `\n      label {\n        color: var(--fin-neutral-1);\n      }\n\n      input {\n        border-radius: 20rem;\n        font-size: 1rem;\n        height: 1.5rem;\n        min-width: 15rem;\n        width: 100%;\n        padding: 0.75rem 1rem;\n        border: 0.063rem solid var(--fin-white);\n        margin: 0.5rem 0;\n        background: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n\n      input[type='checkbox'],\n      input[type='radio'] {\n        width: 1.2rem;\n        height: 1.2rem;\n        margin-top: 0.3rem;\n      }\n\n      input[type='date'] {\n        font-family: Inter, sans-serif;\n      }\n\n      input:focus {\n        outline: none;\n        box-shadow: 0rem 0rem 0.313rem var(--fin-blue-1);\n      }\n    `,\n  ],\n})\nexport class InputComponent implements OnInit {\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() type: string;\n  @Input() name: string;\n  @Input() required: string;\n  @Input() min: number;\n  @Input() id: string;\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar-component',\n  template: `\n    <div class=\"row navbar\">\n      <div class=\"column center\">\n        <img src=\"../../assets/logo.svg\" rel=\"icon\" alt=\"\" class=\"logo\" />\n      </div>\n\n      <h3 *ngIf=\"!userData\" class=\"name\">Welcome!</h3>\n      <h3 *ngIf=\"userData\" class=\"name\">Welcome {{ this.userData }}!</h3>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"/addAccounts\">\n            <p class=\"white-text\">Add Accounts</p>\n          </a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"/manageAccounts\">\n            <p class=\"white-text\">Manage Accounts</p>\n          </a>\n        </li>\n\n        <div style=\"width:2rem; border-right:0.05rem solid white;\"></div>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a href=\"/\">\n            <i class=\"fa fa-power-off\"></i>\n            <p class=\"white-text\">Logout</p>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n  styles: [\n    `\n      .logo {\n        width: 8rem;\n        height: 8rem;\n      }\n      .name {\n        width: 100%;\n        color: var(--fin-white);\n        font-weight: normal;\n      }\n\n      .profilelogo {\n        width: 3rem;\n        height: 3rem;\n      }\n      .navbar {\n        align-items: center;\n        background: var(--fin-gradient);\n        border-radius: 0rem 0rem 2rem 2rem;\n        min-width: 39.6875rem;\n      }\n\n      .nav {\n        padding-left: 0;\n        margin-bottom: 0;\n        list-style: none;\n        width: 50rem;\n      }\n\n      .nav > li > a {\n        position: relative;\n        display: block;\n        padding: 0.625rem 0.9375rem;\n      }\n\n      .active {\n        text-decoration: none;\n        background-color: rgba(255, 255, 255, 0.2);\n        border-radius: 0.625rem;\n      }\n\n      .navbar-nav > li > a {\n        padding-top: 0.9375rem;\n        padding-bottom: 0.9375rem;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n      }\n      .navbar-right {\n        float: right;\n        display: flex;\n        justify-content: flex-end;\n        width: 95rem;\n      }\n\n      .white-text {\n        color: white;\n      }\n    `,\n  ],\n})\nexport class NavbarComponent implements OnInit {\n  @Input('childToMaster') userData: string;\n\n  ngOnInit() {}\n}\n","/**\n * A single tab page. It renders the passed template\n * via the @Input properties by using the ngTemplateOutlet\n * and ngTemplateOutletContext directives.\n */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tab-component',\n  styles: [\n    `\n      .pane {\n        padding: 1em;\n      }\n    `,\n  ],\n  template: `\n    <div [hidden]=\"!active\" class=\"pane\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class TabComponent {\n  @Input() title: string;\n  @Input() active = false;\n}\n","/**\n * The main component that renders single TabComponent\n * instances.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { TabComponent } from './tab.component';\n\n@Component({\n  selector: 'app-tabs-component',\n  template: `\n    <ul class=\"nav nav-tabs\">\n      <li\n        *ngFor=\"let tab of tabs\"\n        (click)=\"selectTab(tab)\"\n        [class.active]=\"tab.active\"\n      >\n        <a href=\"tab\">{{ tab.title }}</a>\n      </li>\n    </ul>\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      .tab-close {\n        color: gray;\n        text-align: right;\n        cursor: pointer;\n      }\n    `,\n  ],\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // get all active tabs\n    const activeTabs = this.tabs.filter((tab) => tab.active);\n\n    // if there is no active tab set, activate the first\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: TabComponent) {\n    // deactivate all tabs\n    this.tabs.toArray().forEach((tab) => (tab.active = false));\n\n    // activate the tab the user has clicked on.\n    tab.active = true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\nexport const userId = 1;\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}