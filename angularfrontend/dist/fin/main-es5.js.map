{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/page-content/add-accounts.component.ts","webpack:///src/app/components/page-content/login.component.ts","webpack:///src/app/components/page-content/manage-accounts.component.ts","webpack:///src/app/components/page-content/signup.component.ts","webpack:///src/app/components/page-template/headerpagetemplate.component.ts","webpack:///src/app/components/page-template/pagetemplate.component.ts","webpack:///src/app/components/small-components/empty-content.component.ts","webpack:///src/app/components/small-components/header.component.ts","webpack:///src/app/components/small-components/help-modal-button.component.ts","webpack:///src/app/components/small-components/help-modal.component.ts","webpack:///src/app/components/small-components/help-modal.service.ts","webpack:///src/app/components/small-components/input.component.ts","webpack:///src/app/components/small-components/navbar.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","template","styles","AppModule","declarations","providers","bootstrap","schemas","AddAccountsComponent","accountFieldData","label","placeholder","type","name","min","LoginComponent","inputFieldData","ManageAccountsComponent","SignupComponent","signupFieldData","HeaderPageTemplateComponent","PageTemplateComponent","EmptyContentComponent","HeaderComponent","HelpModalButtonComponent","modalService","open","close","openModal","closeModal","ModalComponent","el","element","nativeElement","console","error","document","body","appendChild","addEventListener","target","className","add","remove","style","display","classList","encapsulation","None","ModalService","modals","modal","push","filter","x","find","providedIn","InputComponent","required","NavbarComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AddAccountsComponent } from './components/page-content/add-accounts.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/page-content/login.component';\nimport { SignupComponent } from './components/page-content/signup.component';\nimport { ManageAccountsComponent } from './components/page-content/manage-accounts.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'addAccounts', component: AddAccountsComponent },\n  { path: 'manageAccounts', component: ManageAccountsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``],\n})\nexport class AppComponent {\n  title = 'fin';\n}\n","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { PageTemplateComponent } from './components/page-template/pagetemplate.component';\nimport { HeaderPageTemplateComponent } from './components/page-template/headerpagetemplate.component';\n\nimport { ManageAccountsComponent } from './components/page-content/manage-accounts.component';\nimport { AddAccountsComponent } from './components/page-content/add-accounts.component';\nimport { LoginComponent } from './components/page-content/login.component';\nimport { SignupComponent } from './components/page-content/signup.component';\nimport { NavbarComponent } from './components/small-components/navbar.component';\nimport { HeaderComponent } from './components/small-components/header.component';\n\nimport { ModalComponent } from \"./components/small-components/help-modal.component\";\nimport { HelpModalButtonComponent } from './components/small-components/help-modal-button.component';\nimport { EmptyContentComponent } from './components/small-components/empty-content.component';\nimport { InputComponent } from './components/small-components/input.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputComponent,\n    HeaderPageTemplateComponent,\n    PageTemplateComponent,\n    EmptyContentComponent,\n    NavbarComponent,\n    HeaderComponent,\n    LoginComponent,\n    SignupComponent,\n    ManageAccountsComponent,\n    AddAccountsComponent, ModalComponent, \n    HelpModalButtonComponent\n  ],\n  imports: [BrowserModule, AppRoutingModule],\n  providers: [\n    InputComponent,\n    PageTemplateComponent,\n    EmptyContentComponent,\n    HeaderPageTemplateComponent,\n    NavbarComponent,\n    HeaderComponent,\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'add-accounts-content-component',\n  template: `\n    <page-template [pagedirections]=\"'Fill out the form to add an account. To view and manage accounts click\n    Manage Accounts in the navbar.'\" >\n\n      <div class=\"inputs\" *ngFor=\"let input of accountFieldData\">\n      <input-component\n        [label]=\"input.label\"\n        [placeholder]=\"input.placeholder\"\n        [type]=\"input.type\"\n        [name]=\"input.name\"\n        [min]=\"input.min\"\n      ></input-component>\n      </div>\n      <button class=\"primary round\" onclick=\"\">\n        Add Account\n      </button>\n    </page-template>\n\n  `,\n  styles: [`\n  .inputs {\n    width: 30%;\n  }\n  `],\n})\nexport class AddAccountsComponent implements OnInit {\n  constructor() {}\n\n\n  accountFieldData = [\n    {\n      label: 'Account Type (checking/savings)',\n      placeholder: 'Type in your account type',\n      type: 'text',\n      name: 'name',\n    },\n    {\n      label: 'Account Description (Example: TD Bank Checking)',\n      placeholder: 'Type in your account description',\n      type: 'text',\n      name: 'description',\n    },\n    {\n      label: 'Account Starting Amount ($)',\n      placeholder: 'Type in your account starting amount',\n      type: 'number',\n      name: 'amount',\n      min: 0\n    },\n  ];\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'login-content-component',\n  template: `\n    <header-page-template [pagetitle]=\"'Sign In'\">\n      <div class=\"inputs\" *ngFor=\"let input of inputFieldData\">\n        <input-component\n          [label]=\"input.label\"\n          [placeholder]=\"input.placeholder\"\n          [type]=\"input.type\"\n          [name]=\"input.name\"\n        ></input-component>\n      </div>\n\n      <div class=\"login-button\">\n        <button\n          class=\"primary round\"\n          onclick=\"location.href='/manageAccounts';\"\n        >\n          Sign In\n        </button>\n      </div>\n      <a href=\"/signup\">Don't have an account? Signup -> </a>\n    </header-page-template>\n  `,\n  styles: [\n    `\n      h2 {\n        background: linear-gradient(\n          to right,\n          #f32170,\n          #ff6b08,\n          #cf23cf,\n          #eedd44\n        );\n        -webkit-text-fill-color: transparent;\n        -webkit-background-clip: text;\n      }\n\n      .login-button {\n        display: flex;\n        justify-content: center;\n        width: 70%;\n      }\n\n      .inputs {\n        width: 30%;\n      }\n    `,\n  ],\n})\nexport class LoginComponent implements OnInit {\n  constructor() {}\n  inputFieldData = [\n    {\n      label: 'Email',\n      placeholder: 'Type in your email',\n      type: 'email',\n      name: 'email',\n    },\n    {\n      label: 'Password',\n      placeholder: 'Type in your password',\n      type: 'password',\n      name: 'password',\n    },\n  ];\n  ngOnInit(): void {}\n}\n","import { Component, OnInit,Input } from '@angular/core';\n\n\n@Component({\n  selector: 'manage-accounts-content-component',\n  template: `\n    <page-template [pagedirections]=\"'Click on an account to view and add information'\">\n      <app-emptycontent\n        emptyHeader=\"No Accounts Yet\"\n        emptyPar=\"Click 'Add Accounts' in the navbar to add an account. \"\n      ></app-emptycontent>\n    </page-template>\n  `,\n  styles: [`\n  `],\n})\nexport class ManageAccountsComponent implements OnInit {\n  constructor() {}\n  ngOnInit(): void {}\n\n}\n","import { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'signup-content-component',\n  template: `\n    <header-page-template [pagetitle]=\"'Sign Up'\">\n\n        <div class=\"inputs\" *ngFor=\"let input of signupFieldData\">\n        <input-component\n          [label]=\"input.label\"\n          [placeholder]=\"input.placeholder\"\n          [type]=\"input.type\"\n          [name]=\"input.name\"\n        ></input-component>\n      </div>\n\n        <div class=\"login-button\">\n          <button\n            class=\"primary round\"\n            onclick=\"location.href='/manageAccounts';\"\n          >\n            Sign Up\n          </button>\n        </div>\n        <a href=\"/\">Already have an account? Login -> </a>\n    </header-page-template>\n  `,\n  styles: [\n    `\n      .login-button {\n        display: flex;\n        justify-content: center;\n        width: 70%;\n      }\n\n      .inputs {\n        width: 30%;\n      }\n    `,\n  ],\n})\nexport class SignupComponent implements OnInit {\n  constructor() {}\n\n\n  signupFieldData = [\n    {\n      label: 'Full Name',\n      placeholder: 'Type in your full name',\n      type: 'fname',\n      name: 'fname',\n    },\n    {\n      label: 'Email',\n      placeholder: 'Type in your email',\n      type: 'email',\n      name: 'email',\n    },\n    {\n      label: 'Password',\n      placeholder: 'Type in your password',\n      type: 'password',\n      name: 'password',\n    },\n  ];\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'header-page-template',\n  template: `\n    <header-component\n      [maintitle]=\"'Fin'\"\n      [tagline]=\"'Financial Accounts Management'\"\n    ></header-component>\n    <div class=\"content\">\n    <div class=\"column login-signup-container\">\n    <h2>{{pagetitle}}</h2>\n\n      <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .content {\n        margin: 2rem 2rem 0rem 2rem;\n      }\n      \n      h2 {\n        color: var(--fin-neutral-1);\n      }\n  \n      .login-signup-container {\n        align-items: center;\n        margin-top: 5rem;\n      }\n    `,\n  ],\n})\nexport class HeaderPageTemplateComponent implements OnInit {\n  constructor() {}\n\n  @Input() pagetitle: string;\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'page-template',\n  template: `\n    <navbar-component></navbar-component>\n    <div class=\"content\">\n    <p>{{ pagedirections }}</p>\n      <ng-content></ng-content>\n    </div>\n    <help-modal-button-component [modaltext]=\"'To add an account click Add An Account.  To view accounts click Manage Accounts.  To add transactions for a specific account click on that account.'\"></help-modal-button-component>\n  `,\n  styles: [\n    `\n      .content {\n        margin: 2rem 2rem 0rem 2rem;\n      }\n    `,\n  ],\n})\nexport class PageTemplateComponent implements OnInit {\n  constructor() {}\n\n  @Input() pagedirections: string;\n  ngOnInit(): void {}\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n@Component({\n  selector: 'app-emptycontent',\n  template: `\n    <div class=\"wrapper\">\n      <img src=\"../../assets/empty.svg\" rel=\"icon\" alt=\"\" class=\"emptyicon\" />\n      <br />\n\n      <div class=\"row\">\n        <h3>{{ emptyHeader }}</h3>\n      </div>\n      <br />\n      <p class=\"space\">{{ emptyPar }}</p>\n    </div>\n  `,\n  styles: [\n    `\n      .emptyicon {\n        padding-left: 3rem;\n      }\n\n      .wrapper {\n        display: flex;\n        flex-direction: column;\n        padding: 4rem;\n        align-items: center;\n      }\n    `,\n  ],\n})\nexport class EmptyContentComponent implements OnInit {\n  constructor() {}\n  @Input() emptyHeader: string;\n  @Input() emptyPar: string;\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'header-component',\n  template: `\n    <div class=\"row hero\">\n      <div class=\"column center\">\n        <div class=\"row\">\n          <img src=\"../../assets/logo.svg\" rel=\"icon\" alt=\"\" class=\"logo\" />\n          <h1 class=\"fin\">{{ maintitle }}</h1>\n        </div>\n        <p class=\"tag-line\">{{ tagline }}</p>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .hero {\n        align-items: center;\n        background: var(--fin-gradient);\n        border-radius: 0rem 0rem 2rem 2rem;\n        justify-content: center;\n        padding: 6rem;\n      }\n\n      .fin {\n        color: var(--fin-white);\n        font-family: 'Courgette', cursive;\n        font-size: 6rem;\n        text-shadow: 0.07rem 0.07rem var(--fin-neutral-1);\n      }\n\n      .tag-line {\n        color: var(--fin-white);\n      }\n\n      img {\n        padding-right: 2rem;\n      }\n    `,\n  ],\n})\nexport class HeaderComponent implements OnInit {\n  constructor() {}\n  @Input() maintitle: string;\n  @Input() tagline: string;\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalService } from '../small-components/help-modal.service';\n\n@Component({\n  selector: 'help-modal-button-component',\n  template: `\n  <button class=\"btn-help\" (click)=\"openModal('custom-modal-1')\">?</button>\n  \n  <modal id=\"custom-modal-1\">\n  <div class=\"float-right\">\n  <button class=\"secondary\" (click)=\"closeModal('custom-modal-1');\"> X</button>\n  </div>\n    <p>{{modaltext}}</p>\n    \n  </modal>\n  `,\n  styles: [\n    `\n.float-right {\n  float: right;\n}\n     \n    `,\n  ],\n})\nexport class HelpModalButtonComponent implements OnInit {\n  constructor(private modalService: ModalService) {}\n\n  @Input() modaltext: string;\n  ngOnInit(): void {}\n\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n  \n}\n","import {\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input,\n    OnInit,\n    OnDestroy\n  } from \"@angular/core\";\n  \n  import { ModalService } from \"./help-modal.service\";\n  \n  @Component({\n    selector: \"modal\",\n    template: `\n      <div class=\"modal\">\n        <div class=\"modal-body\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n      <div class=\"modal-background\"></div>\n    `,\n    styles: [\n      `\n        modal {\n          display: none;\n        }\n        .modal {\n          position: fixed;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n          z-index: 1000;\n          overflow: auto;\n        }\n        .modal .modal-body {\n          padding: 1.25rem;\n          background: #fff;\n          margin: 16rem;\n          border-radius: 2rem;\n          min-height: 20rem;\n          max-width: 80rem;\n        }\n        .modal-background {\n          position: fixed;\n          top: 0;\n          right: 0;\n          bottom: 0;\n          left: 0;\n          background-color: var(--fin-black-transparent);\n          opacity: 0.75;\n          z-index: 900;\n        }\n        body.modal-open {\n          overflow: hidden;\n        }\n      `\n    ],\n    encapsulation: ViewEncapsulation.None\n  })\n  export class ModalComponent implements OnInit, OnDestroy {\n    @Input() id: string;\n    private element: any;\n  \n    constructor(private modalService: ModalService, private el: ElementRef) {\n      this.element = el.nativeElement;\n    }\n  \n    ngOnInit(): void {\n      // ensure id attribute exists\n      if (!this.id) {\n        console.error(\"modal must have an id\");\n        return;\n      }\n  \n      // move element to bottom of page (just before </body>) so it can be displayed above everything else\n      document.body.appendChild(this.element);\n  \n      // close modal on background click\n      this.element.addEventListener(\"click\", el => {\n        if (el.target.className === \"modal\") {\n          this.close();\n        }\n      });\n  \n      // add self (this modal instance) to the modal service so it's accessible from controllers\n      this.modalService.add(this);\n    }\n  \n    // remove self from modal service when component is destroyed\n    ngOnDestroy(): void {\n      this.modalService.remove(this.id);\n      this.element.remove();\n    }\n  \n    // open modal\n    open(): void {\n      this.element.style.display = \"block\";\n      document.body.classList.add(\"modal-open\");\n    }\n  \n    // close modal\n    close(): void {\n      this.element.style.display = \"none\";\n      document.body.classList.remove(\"modal-open\");\n    }\n  }\n  ","import { Injectable } from \"@angular/core\";\n\n@Injectable({ providedIn: \"root\" })\nexport class ModalService {\n  private modals: any[] = [];\n\n  add(modal: any) {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    // remove modal from array of active modals\n    this.modals = this.modals.filter(x => x.id !== id);\n  }\n\n  open(id: string) {\n    // open modal specified by id\n    const modal = this.modals.find(x => x.id === id);\n    modal.open();\n  }\n\n  close(id: string) {\n    // close modal specified by id\n    const modal = this.modals.find(x => x.id === id);\n    modal.close();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'input-component',\n  template: `\n    <label>{{ label }}</label>\n\n    <input\n      placeholder=\"{{ placeholder }}\"\n      type=\"{{ type }}\"\n      name=\"{{ name }}\"\n      required=\"{{ required }}\"\n      min=\"{{min}}\"\n    />\n  `,\n\n  styles: [\n    `\n      label {\n        color: var(--fin-neutral-1);\n      }\n\n      input {\n        border-radius: 20rem;\n        font-size: 1rem;\n        height: 1.5rem;\n        min-width: 15rem;\n        width: 100%;\n        padding: 0.75rem 1rem;\n        border: 1px solid var(--fin-white);\n        margin: 0.5rem 0;\n        background: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n    `,\n  ],\n})\nexport class InputComponent implements OnInit {\n  constructor() {}\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() type: string;\n  @Input() name: string;\n  @Input() required: string;\n  @Input() min: number;\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar-component',\n  template: `\n    <div class=\"row navbar\">\n      <div class=\"column center\">\n        <img src=\"../../assets/logo.svg\" rel=\"icon\" alt=\"\" class=\"logo\" />\n      </div>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"/addAccounts\">\n            <p class=\"white-text\">Add Accounts</p>\n          </a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"/manageAccounts\">\n            <p class=\"white-text\">Manage Accounts</p>\n          </a>\n        </li>\n\n        <div style=\"width:2rem; border-right:0.05rem solid white;\"></div>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a href=\"/\">\n            <i class=\"fa fa-power-off\"></i>\n            <p class=\"white-text\">Logout</p>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n  styles: [\n    `\n      .logo {\n        width: 8rem;\n        height: 8rem;\n      }\n\n      .profilelogo {\n        width: 3rem;\n        height: 3rem;\n      }\n      .navbar {\n        align-items: center;\n        background: var(--fin-gradient);\n        border-radius: 0rem 0rem 2rem 2rem;\n        min-width: 39.6875rem;\n      }\n\n      .nav {\n        padding-left: 0;\n        margin-bottom: 0;\n        list-style: none;\n        width: 50rem;\n      }\n\n      .nav > li > a {\n        position: relative;\n        display: block;\n        padding: 0.625rem 0.9375rem;\n      }\n\n      .nav > li > a:hover,\n      .nav > li > a:focus,\n      .nav > li > a:active {\n        text-decoration: none;\n        background-color: rgba(255, 255, 255, 0.2);\n      }\n\n      .navbar-nav > li > a {\n        padding-top: 0.9375rem;\n        padding-bottom: 0.9375rem;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n      }\n      .navbar-right {\n        float: right;\n        display: flex;\n        justify-content: flex-end;\n        width: 95rem;\n      }\n\n      .white-text {\n        color: white;\n      }\n    `,\n  ],\n})\nexport class NavbarComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}