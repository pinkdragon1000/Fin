{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/api.service.ts","./src/app/components/page-content/account.component.ts","./src/app/components/page-content/add-accounts.component.ts","./src/app/components/page-content/login.component.ts","./src/app/components/page-content/manage-accounts.component.ts","./src/app/components/page-content/signup.component.ts","./src/app/components/page-template/headerpagetemplate.component.ts","./src/app/components/page-template/pagetemplate.component.ts","./src/app/components/small-components/add-transaction-modal-button.component.ts","./src/app/components/small-components/add-transaction-modal.component.ts","./src/app/components/small-components/add-transaction-modal.service.ts","./src/app/components/small-components/clickable-list-view.component.ts","./src/app/components/small-components/empty-content.component.ts","./src/app/components/small-components/header.component.ts","./src/app/components/small-components/help-modal-button.component.ts","./src/app/components/small-components/help-modal.component.ts","./src/app/components/small-components/help-modal.service.ts","./src/app/components/small-components/input.component.ts","./src/app/components/small-components/navbar.component.ts","./src/app/components/small-components/tab.component.ts","./src/app/components/small-components/tabs.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { AddAccountsComponent } from './components/page-content/add-accounts.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/page-content/login.component';\nimport { SignupComponent } from './components/page-content/signup.component';\nimport { ManageAccountsComponent } from './components/page-content/manage-accounts.component';\nimport { AccountComponent } from './components/page-content/account.component';\n\nconst routes: Routes = [\n  { path: '', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'addAccounts', component: AddAccountsComponent },\n  { path: 'manageAccounts', component: ManageAccountsComponent },\n  { path: 'account', component: AccountComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `<router-outlet></router-outlet>`,\n  styles: [``],\n})\nexport class AppComponent {\n  title = 'fin';\n}\n","import { AddTransactionModalComponent } from './components/small-components/add-transaction-modal.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { PageTemplateComponent } from './components/page-template/pagetemplate.component';\nimport { HeaderPageTemplateComponent } from './components/page-template/headerpagetemplate.component';\n\nimport { ManageAccountsComponent } from './components/page-content/manage-accounts.component';\nimport { AddAccountsComponent } from './components/page-content/add-accounts.component';\nimport { AccountComponent } from './components/page-content/account.component';\nimport { LoginComponent } from './components/page-content/login.component';\nimport { SignupComponent } from './components/page-content/signup.component';\n\nimport { NavbarComponent } from './components/small-components/navbar.component';\nimport { HeaderComponent } from './components/small-components/header.component';\nimport { ClickableListViewComponent } from './components/small-components/clickable-list-view.component';\n\nimport { ModalComponent } from './components/small-components/help-modal.component';\nimport { HelpModalButtonComponent } from './components/small-components/help-modal-button.component';\nimport { EmptyContentComponent } from './components/small-components/empty-content.component';\nimport { InputComponent } from './components/small-components/input.component';\n\nimport { APIService } from './components/api.service';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddTransactionButtonComponent } from './components/small-components/add-transaction-modal-button.component';\nimport { TabsComponent } from './components/small-components/tabs.component';\nimport { TabComponent } from './components/small-components/tab.component';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//import { BarComponent } from './components/page-content/bar.component';\n//import { BarComponent1 } from './components/page-content/bar.component1';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    InputComponent,\n    HeaderPageTemplateComponent,\n    PageTemplateComponent,\n    EmptyContentComponent,\n    NavbarComponent,\n    HeaderComponent,\n    LoginComponent,\n    SignupComponent,\n    ManageAccountsComponent,\n    AddAccountsComponent,\n    AccountComponent,\n    AddTransactionModalComponent,\n    AddTransactionButtonComponent,\n    TabsComponent,\n    TabComponent,\n    ModalComponent,\n    HelpModalButtonComponent,\n    ClickableListViewComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgxChartsModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [\n    InputComponent,\n    PageTemplateComponent,\n    EmptyContentComponent,\n    HeaderPageTemplateComponent,\n    APIService,\n    NavbarComponent,\n    HeaderComponent,\n    ClickableListViewComponent,\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class APIService {\n  constructor(private http: HttpClient) {}\n  userResult: Object;\n  accountsResult: Object;\n  transactionsResult: Object;\n  msg: string;\n\n  getUserData(callback: any) {\n    this.http\n      .get('http://localhost:8080/users')\n      .pipe(map((res) => res))\n      .subscribe((res) => {\n        this.userResult = res;\n        callback(this.userResult);\n      });\n  }\n\n  postValidateUser(body: string): string {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    this.http\n      .post('http://localhost:8080/validateUser', body, {\n        headers,\n        observe: 'response',\n      })\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n          this.msg = 'success';\n          return this.msg;\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n          console.log(error);\n          this.msg = 'error';\n          return this.msg;\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n    return this.msg;\n  }\n\n  getAccountDataAsync(callback: any) {\n    this.http\n      .get('http://localhost:8080/accounts')\n      .pipe(map((res) => res))\n      .subscribe((res) => {\n        this.accountsResult = res;\n        callback(this.accountsResult);\n        console.log(this.accountsResult);\n      });\n  }\n\n  getTransactionDataAsync(callback: any) {\n    this.http\n      .get('http://localhost:8080/transactions')\n      .pipe(map((res) => res))\n      .subscribe((res) => {\n        this.transactionsResult = res;\n        callback(this.transactionsResult);\n        console.log(this.transactionsResult);\n      });\n  }\n\n  postUserData(body: string) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    this.http\n      .post('http://localhost:8080/addUser', body, {\n        headers,\n        observe: 'response',\n      })\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n\n  postAccountData(body: string) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    this.http\n      .post('http://localhost:8080/addAccount', body, {\n        headers,\n        observe: 'response',\n      })\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n\n  postTransactionDataTest() {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    const body =\n      '{\"account_id\":{\"account_id\": 1}, \"transaction_type\": \"Deposit\", \"transaction_date\": \"2021-09-18\", \"transaction_amount\": 20, \"transaction_subTotal\": 0}';\n    this.http\n      .post('http://localhost:8080/addTransaction', body, {\n        headers,\n        observe: 'response',\n      })\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n\n  postTransactionData(body: string) {\n    const headers = {\n      'content-type': 'application/json',\n      Authorization: 'Basic ' + btoa('srobinson:bl'),\n    };\n    this.http\n      .post('http://localhost:8080/addTransaction', body, {\n        headers,\n        observe: 'response',\n      })\n      .subscribe(\n        (response) => {\n          console.log(\n            'POST completed sucessfully. The response received ' + response\n          );\n        },\n        (error) => {\n          console.log('Post failed with the errors');\n        },\n        () => {\n          console.log('Post Completed');\n        }\n      );\n  }\n}\n","import { APIService } from './../api.service';\nimport { Component, OnInit } from '@angular/core';\n//import { formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-account-component',\n  template: `\n    <app-page-template\n      [pagedirections]=\"'Click on an account to view and add information'\"\n      [pagetitle]=\"this.accountDescription\"\n    >\n      <app-add-transaction-button-component modalAccountText=\"\">\n        <div class=\"input\" *ngFor=\"let input of accountFieldData\">\n          <input-component\n            [label]=\"input.label\"\n            [placeholder]=\"input.placeholder\"\n            [type]=\"input.type\"\n            [name]=\"input.name\"\n            [min]=\"input.min\"\n            [id]=\"input.id\"\n          ></input-component>\n        </div>\n        <label>Transaction Type </label>\n        <br />\n        <select class=\"select\">\n          <option value=\"0\">Select your transaction type</option>\n          <option value=\"1\">Deposit</option>\n          <option value=\"2\">Withdraw</option>\n        </select>\n        <br />\n        <button\n          type=\"submit\"\n          class=\"primary round\"\n          (click)=\"postTransactionData()\"\n        >\n          Submit Transaction\n        </button>\n      </app-add-transaction-button-component>\n\n      <p>Transactions</p>\n      <div class=\"scroll\">\n        <table>\n          <tr>\n            <th>Transaction Date</th>\n            <th>Transaction Type</th>\n            <th>Transaction Amount</th>\n            <th>Sub-Total</th>\n          </tr>\n\n          <tr\n            *ngFor=\"let transaction of transactionData\"\n            [ngClass]=\"{\n              'text-deposit': transaction.transaction_type === 'Deposit',\n              'text-withdraw': transaction.transaction_type === 'Withdraw'\n            }\"\n          >\n            <ng-container\n              *ngIf=\"\n                accountUser === currentUser &&\n                transaction.account_id === accountIDnum\n              \"\n            >\n              <td>{{ transaction.transaction_date }}</td>\n              <td>{{ transaction.transaction_type }}</td>\n              <td\n                [ngClass]=\"{\n                  'text-deposit-arrow':\n                    transaction.transaction_type === 'Deposit',\n                  'text-withdraw-arrow':\n                    transaction.transaction_type === 'Withdraw'\n                }\"\n              >\n                \\${{ transaction.transaction_amount }}\n              </td>\n              <td>\\${{ transaction.transaction_subTotal }}</td>\n            </ng-container>\n          </tr>\n        </table>\n      </div>\n      <br />\n      <br />\n      <p>Overall Account Summary</p>\n      <table>\n        <tr>\n          <th>Account Starting Amount</th>\n          <th>Account Deposits</th>\n          <th>Account Withdraws</th>\n          <th>Account Current Amount</th>\n          <th>Overall Account Difference</th>\n        </tr>\n        <tr>\n          <td>\\${{ this.accountStartingAmount }}</td>\n          <td>\\${{ this.accountDeposits }}</td>\n          <td>\\${{ this.accountWithdraws }}</td>\n          <td>\n            \\${{ this.transactionData.slice(-1).pop().transaction_subTotal }}\n          </td>\n          <td>\n            \\${{\n              this.transactionData.slice(-1).pop().transaction_subTotal -\n                this.accountStartingAmount\n            }}\n          </td>\n        </tr>\n      </table>\n    </app-page-template>\n  `,\n  styles: [\n    `\n      .scroll {\n        height: 10rem;\n        overflow-y: scroll;\n      }\n      .clickable-view {\n        margin: 0.625rem;\n      }\n\n      .inputs {\n        align-items: center;\n      }\n      .input {\n        width: 50%;\n      }\n      .select {\n        width: 52%;\n      }\n\n      .row {\n        padding-right: 5rem;\n      }\n\n      .text-deposit {\n        color: green;\n      }\n\n      .text-withdraw {\n        color: #a10a28;\n      }\n\n      .text-deposit-arrow::before {\n        font-family: 'Font Awesome 5 Free';\n        content: '↑';\n      }\n\n      .text-withdraw-arrow::before {\n        font-family: 'Font Awesome 5 Free';\n        content: '↓';\n      }\n\n      select {\n        border-radius: 20rem;\n        font-size: 1rem;\n        height: 1.5rem;\n        min-width: 15rem;\n        width: 100%;\n        height: 3.25rem;\n        padding: 0rem 1rem;\n        border: 0.063rem solid var(--fin-white);\n        margin: 0.5rem 0;\n        background: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n\n      table {\n        border-collapse: collapse;\n        width: 100%;\n      }\n\n      th {\n        background-color: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n\n      td,\n      th {\n        border: 0.063rem solid #dddddd;\n        text-align: left;\n        padding: 0.5rem;\n      }\n    `,\n  ],\n})\nexport class AccountComponent implements OnInit {\n  accountStartingAmount: number;\n  accountDeposits: string;\n  accountWithdraws: string;\n  accountID: string;\n  accountIDnum: number;\n  accountDescription: string;\n  transactionId: string;\n  accountUser: number;\n\n  currentUser = 1;\n\n  transactionData: Array<any>;\n\n  accountFieldData = [\n    {\n      label: 'Transaction Amount',\n      placeholder: 'Type in your transaction amount',\n      type: 'number',\n      name: 'amount',\n      min: 0,\n      id: 'amount',\n    },\n    {\n      label: 'Transaction Group',\n      placeholder: 'Type in your transaction group',\n      type: 'text',\n      name: 'transaction group',\n      id: 'group',\n    },\n    {\n      label: 'Transaction Date',\n      placeholder: 'Type in your transaction date',\n      type: 'date',\n      name: 'date',\n      id: 'date',\n    },\n  ];\n\n  constructor(private apiService: APIService) {}\n  postTransactionData() {\n    this.accountIDnum = parseInt(window.location.search.substring(4), 10);\n    const transactionType = 'Deposit';\n    const transactionDate = (\n      document.getElementById('date') as HTMLInputElement\n    ).value;\n\n    const transactionAmount = (\n      document.getElementById('amount') as HTMLInputElement\n    ).value;\n\n    console.log(transactionDate);\n\n    const body =\n      '{\"account_id\":{\"account_id\":' +\n      this.accountIDnum +\n      '}, \"transaction_type\":' +\n      transactionType +\n      ', \"transaction_date\":' +\n      transactionDate +\n      ', \"transaction_amount\":' +\n      transactionAmount +\n      ', \"transaction_subTotal\": 0}';\n    this.apiService.postTransactionData(body);\n    location.reload();\n  }\n\n  ngOnInit() {\n    this.accountIDnum = parseInt(window.location.search.substring(4), 10);\n    this.accountID = (\n      parseInt(window.location.search.substring(4), 10) - 1\n    ).toString();\n\n    this.apiService.getAccountDataAsync((d: Object) => {\n      this.accountDescription = d[this.accountID].account_Description;\n      this.accountDeposits = d[this.accountID].deposit_amount;\n      this.accountWithdraws = d[this.accountID].withdraw_amount;\n      this.accountUser = d[this.accountID].user_id;\n      this.accountStartingAmount = d[this.accountID].account_Starting_Amount;\n    });\n\n    this.apiService.getTransactionDataAsync((d: Array<any>) => {\n      this.transactionData = d;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from './../api.service';\nimport { userId } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-accounts-content-component',\n  template: `\n    <app-page-template\n      [pagetitle]=\"'Add Accounts'\"\n      [pagedirections]=\"\n        'Fill out the form to add an account. To view and manage accounts click\n    Manage Accounts in the navbar.'\n      \"\n    >\n      <div *ngIf=\"error\" [innerHTML]=\"error\" class=\"error\"></div>\n      <form>\n        <div class=\"inputs\">\n          <label>Account Type (checking/savings)</label>\n          <br />\n          <select class=\"select\" id=\"select\">\n            <option value=\"0\">Select your account type</option>\n            <option value=\"1\">Checking</option>\n            <option value=\"2\">Savings</option>\n          </select>\n          <div class=\"input\" *ngFor=\"let input of accountFieldData\">\n            <input-component\n              [label]=\"input.label\"\n              [placeholder]=\"input.placeholder\"\n              [type]=\"input.type\"\n              [name]=\"input.name\"\n              [min]=\"input.min\"\n              [id]=\"input.id\"\n            ></input-component>\n          </div>\n        </div>\n        <button type=\"submit\" class=\"primary round\" (click)=\"postAccountData()\">\n          Add Account\n        </button>\n      </form>\n    </app-page-template>\n  `,\n  styles: [\n    `\n      .inputs {\n        align-items: center;\n      }\n      .input {\n        width: 50%;\n      }\n      .select {\n        width: 52%;\n      }\n\n      select {\n        border-radius: 20rem;\n        font-size: 1rem;\n        height: 1.5rem;\n        min-width: 15rem;\n        width: 100%;\n        height: 3.25rem;\n        padding: 0rem 1rem;\n        border: 0.063rem solid var(--fin-white);\n        margin: 0.5rem 0;\n        background: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n    `,\n  ],\n})\nexport class AddAccountsComponent implements OnInit {\n  error: string;\n  startingAmount: any = 0;\n  accountDescription: string;\n  accountTypeNum: any;\n  accountType: string;\n\n  constructor(private apiService: APIService) {}\n\n  accountFieldData = [\n    {\n      label: 'Account Description (Example: TD Bank Checking)',\n      placeholder: 'Type in your account description',\n      type: 'text',\n      name: 'description',\n      id: 'description',\n      min: 0,\n    },\n    {\n      label: 'Account Starting Amount ($)',\n      placeholder: 'Type in your account starting amount',\n      type: 'number',\n      name: 'amount',\n      id: 'amount',\n      min: 1,\n    },\n  ];\n\n  postAccountData() {\n    this.accountTypeNum = (\n      document.getElementById('select') as HTMLInputElement\n    ).value;\n    if (this.accountTypeNum === 1) {\n      this.accountType = 'Checking';\n    } else if (this.accountTypeNum === 2) {\n      this.accountType = 'Savings';\n    }\n    this.accountDescription = (\n      document.getElementById('description') as HTMLInputElement\n    ).value;\n    this.startingAmount = (\n      document.getElementById('amount') as HTMLInputElement\n    ).value;\n\n    if (\n      this.accountTypeNum === 0 ||\n      this.startingAmount === 0 ||\n      this.accountDescription === ''\n    ) {\n      this.error =\n        'Invalid inputs provided.  Please fill out all field inputs.';\n    } else {\n      const body =\n        '{\"user_id\":{\"user_id\":' +\n        userId +\n        '}, \"account_Type\": \"' +\n        this.accountType +\n        '\", \"account_Starting_Amount\": ' +\n        this.startingAmount +\n        ', \"account_Description\": \"' +\n        this.accountDescription +\n        '\", \"deposit_amount\": 0, \"withdraw_amount\": 0}';\n\n      console.log(body);\n\n      this.apiService.postAccountData(body);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { APIService } from './../api.service';\n\n@Component({\n  selector: 'app-login-content-component',\n  template: `\n    <app-header-page-template class=\"signin\" [pagetitle]=\"'Sign In'\">\n      <div *ngIf=\"error\" [innerHTML]=\"error\" class=\"error\"></div>\n\n      <div class=\"inputs\" *ngFor=\"let input of inputFieldData\">\n        <input-component\n          [label]=\"input.label\"\n          [placeholder]=\"input.placeholder\"\n          [id]=\"input.id\"\n          [type]=\"input.type\"\n          [name]=\"input.name\"\n        ></input-component>\n      </div>\n\n      <div class=\"login-button\">\n        <button type=\"submit\" class=\"primary round\" (click)=\"signIn()\">\n          Sign In\n        </button>\n      </div>\n      <a href=\"/signup\">Don't have an account? Signup -> </a>\n    </app-header-page-template>\n  `,\n  styles: [\n    `\n      .login-button {\n        display: flex;\n        justify-content: center;\n        width: 70%;\n      }\n\n      .inputs {\n        width: 30%;\n      }\n    `,\n  ],\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n  error: string;\n  response: any;\n  user: string;\n  inputFieldData = [\n    {\n      label: 'Email',\n      placeholder: 'Type in your email',\n      type: 'email',\n      name: 'email',\n      id: 'email',\n    },\n    {\n      label: 'Password',\n      placeholder: 'Type in your password',\n      type: 'password',\n      name: 'password',\n      id: 'password',\n    },\n  ];\n\n  loginData = [\n    {\n      password: 'B!ah123',\n    },\n  ];\n  constructor(private apiService: APIService) {}\n\n  ngOnInit(): void {}\n\n  signIn() {\n    this.email = (document.getElementById('email') as HTMLInputElement).value;\n    this.password = (\n      document.getElementById('password') as HTMLInputElement\n    ).value;\n\n    if (this.email === '' || this.password === '') {\n      console.log('Please fill out all fields');\n    } else {\n      const body =\n        '{\"email\": \"' + this.email + '\", \"password\": \"' + this.password + '\"}';\n\n      console.log(body);\n      this.response = this.apiService.postValidateUser(body);\n\n      console.log(this.response);\n      if (!this.response.includes('error') || this.response !== undefined) {\n        console.log('yay');\n        location.href = '/manageAccounts';\n      } else {\n        console.log(\"can't authenticate\");\n        location.href = '/';\n      }\n    }\n\n    /*\n    console.log(this.email);\n    if (\n      this.email ==\n        (<HTMLInputElement>document.getElementById('email')).value &&\n      this.loginData[0].password ==\n        (<HTMLInputElement>document.getElementById('password')).value\n    ) {\n      console.log('Input matches account sign-in info!');\n      location.href = '/manageAccounts';\n    } else if (\n      this.email ==\n        (<HTMLInputElement>document.getElementById('email')).value &&\n      this.loginData[0].password !=\n        (<HTMLInputElement>document.getElementById('password')).value\n    ) {\n      this.error = 'Email exists but password is incorrect';\n      console.log('Email exists but password is incorrect');\n    } else if (\n      (<HTMLInputElement>document.getElementById('email')).value == '' &&\n      (<HTMLInputElement>document.getElementById('password')).value == ''\n    ) {\n      this.error = 'Please enter in a valid username and password';\n    } else if (\n      this.email != (<HTMLInputElement>document.getElementById('email')).value\n    ) {\n      this.error = \"Email doesn't exist.  Please signup first\";\n      console.log(\"Email doesn't exist.  Please signup first\");\n    }\n      */\n  }\n}\n","import { userId } from './../../../environments/environment';\nimport { APIService } from './../api.service';\nimport { Component, OnInit, Input } from '@angular/core';\n@Component({\n  selector: 'app-manage-accounts-content-component',\n  template: `\n    <app-page-template\n      [pagetitle]=\"'Manage Accounts'\"\n      [pagedirections]=\"'Click on an account to view and add information'\"\n    >\n      <div *ngIf=\"accountData\">\n        <p class=\"align-right\">Account Current Amount</p>\n        <div *ngFor=\"let account of accountData\" class=\"clickable-view\">\n          <div *ngIf=\"account.user_id === userId\">\n            <app-clickable-list-view\n              [name]=\"account.account_Description\"\n              [link]=\"'/account?id='.concat(account.account_id)\"\n              [amount]=\"account.account_Starting_Amount.toLocaleString('en-GB')\"\n            >\n            </app-clickable-list-view>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"!accountData\">\n        <app-emptycontent\n          emptyHeader=\"No Accounts Yet\"\n          emptyPar=\"Click 'Add Accounts' in the navbar to add an account. \"\n        ></app-emptycontent>\n      </div>\n    </app-page-template>\n  `,\n  styles: [\n    `\n      .align-right {\n        text-align: right;\n        margin-right: 10rem;\n      }\n      .clickable-view {\n        margin: 0.625rem;\n      }\n    `,\n  ],\n})\nexport class ManageAccountsComponent implements OnInit {\n  accountData: object;\n  userId: any = userId;\n  constructor(private apiService: APIService) {}\n\n  ngOnInit(): void {\n    this.apiService.getAccountDataAsync((d: object) => {\n      this.accountData = d;\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { APIService } from './../api.service';\nimport * as shajs from 'sha.js';\n\n@Component({\n  selector: 'app-signup-content-component',\n  template: `\n    <app-header-page-template [pagetitle]=\"'Sign Up'\">\n      <form>\n        <div class=\"inputs\" *ngFor=\"let input of signupFieldData\">\n          <input-component\n            [label]=\"input.label\"\n            [placeholder]=\"input.placeholder\"\n            [type]=\"input.type\"\n            [name]=\"input.name\"\n            [id]=\"input.id\"\n          ></input-component>\n        </div>\n\n        <div class=\"login-button\">\n          <button type=\"submit\" class=\"primary round\" (click)=\"postUserData()\">\n            Sign Up\n          </button>\n        </div>\n      </form>\n      <a href=\"/\">Already have an account? Login -> </a>\n    </app-header-page-template>\n  `,\n  styles: [\n    `\n      .login-button {\n        display: flex;\n        justify-content: center;\n        width: 70%;\n      }\n\n      .inputs {\n        width: 30%;\n      }\n    `,\n  ],\n})\nexport class SignupComponent implements OnInit {\n  fullName: string;\n  email: string;\n  password: string;\n  hashedPassword: string;\n  signupFieldData = [\n    {\n      label: 'Full Name',\n      placeholder: 'Type in your full name',\n      type: 'fname',\n      name: 'fname',\n      id: 'fname',\n    },\n    {\n      label: 'Email',\n      placeholder: 'Type in your email',\n      type: 'email',\n      name: 'email',\n      id: 'email',\n    },\n    {\n      label: 'Password',\n      placeholder: 'Type in your password',\n      type: 'password',\n      name: 'password',\n      id: 'password',\n    },\n  ];\n  constructor(private apiService: APIService) {}\n\n  postUserData() {\n    this.fullName = (\n      document.getElementById('fname') as HTMLInputElement\n    ).value;\n    this.email = (document.getElementById('email') as HTMLInputElement).value;\n    this.password = (\n      document.getElementById('password') as HTMLInputElement\n    ).value;\n\n    if (this.fullName === '' || this.email === '' || this.password === '') {\n      console.log('Please fill out all fields');\n    } else {\n      this.hashedPassword = shajs('sha256').update(this.password).digest('hex');\n\n      const body =\n        '{\"fullName\": \"' +\n        this.fullName +\n        '\", \"email\": \"' +\n        this.email +\n        '\", \"password\":\"' +\n        this.hashedPassword +\n        '\"}';\n\n      this.apiService.postUserData(body);\n    }\n  }\n\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header-page-template',\n  template: `\n    <app-header-component\n      [maintitle]=\"'Fin'\"\n      [tagline]=\"'Financial Accounts Management'\"\n    ></app-header-component>\n    <div class=\"content\">\n      <div class=\"column login-signup-container\">\n        <h2 class=\"pagetitle\">{{ pagetitle }}</h2>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .content {\n        margin: 2rem 2rem 0rem 2rem;\n      }\n\n      .login-signup-container {\n        align-items: center;\n        margin-top: 5rem;\n      }\n    `,\n  ],\n})\nexport class HeaderPageTemplateComponent implements OnInit {\n  @Input() pagetitle: string;\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { APIService } from '../api.service';\n\n@Component({\n  selector: 'app-page-template',\n  template: `\n    <app-navbar-component\n      [childToMaster]=\"this.userData\"\n    ></app-navbar-component>\n    <div class=\"content\">\n      <h2 class=\"pagetitle\">{{ pagetitle }}</h2>\n      <p>{{ pagedirections }}</p>\n      <br />\n      <ng-content></ng-content>\n    </div>\n    <app-help-modal-button-component\n      [modaltext]=\"\n        'To add an account click Add An Account.  To view accounts click Manage Accounts.  To add transactions for a specific account click on that account.'\n      \"\n    ></app-help-modal-button-component>\n  `,\n  styles: [\n    `\n      .content {\n        margin: 2rem 2rem 0rem 2rem;\n      }\n    `,\n  ],\n})\nexport class PageTemplateComponent implements OnInit {\n  @Input() pagedirections: string;\n  @Input() pagetitle: string;\n  userData: string;\n\n  constructor(private apiService: APIService) {}\n\n  ngOnInit() {\n    this.apiService.getUserData((d: object) => {\n      this.userData = d[0].fullName;\n    });\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalService } from './help-modal.service';\n\n@Component({\n  selector: 'app-add-transaction-button-component',\n  template: `\n    <button (click)=\"openModal('custom-modal-2')\" class=\"primary round\">\n      Add Transaction\n    </button>\n\n    <modal-component id=\"custom-modal-2\">\n      <div class=\"float-right\">\n        <button class=\"secondary\" (click)=\"closeModal('custom-modal-2')\">\n          X\n        </button>\n      </div>\n      <ng-content></ng-content>\n    </modal-component>\n  `,\n  styles: [\n    `\n      .float-right {\n        float: right;\n      }\n    `,\n  ],\n})\nexport class AddTransactionButtonComponent implements OnInit {\n  @Input() modaltext: string;\n  constructor(private modalService: ModalService) {}\n  ngOnInit(): void {}\n\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { AddTransactionModalService } from './add-transaction-modal.service';\n\n@Component({\n  selector: 'app-add-transaction-modal',\n  template: `\n    <div class=\"modal\">\n      <div class=\"modal-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"modal-background\"></div>\n  `,\n  styles: [\n    `\n      modal {\n        display: none;\n      }\n      .modal {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1000;\n        overflow: auto;\n      }\n      .modal .modal-body {\n        padding: 1.25rem;\n        background: #fff;\n        margin: 16rem;\n        border-radius: 2rem;\n        min-height: 20rem;\n        max-width: 80rem;\n      }\n      .modal-background {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: var(--fin-black-transparent);\n        opacity: 0.75;\n        z-index: 900;\n      }\n      body.modal-open-2 {\n        overflow: hidden;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AddTransactionModalComponent implements OnInit, OnDestroy {\n  @Input() id: string;\n  private element: any;\n\n  constructor(\n    private addTransactionModalService: AddTransactionModalService,\n    private el: ElementRef\n  ) {\n    this.element = el.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // ensure id attribute exists\n    if (!this.id) {\n      console.error('modal must have an id');\n      return;\n    }\n\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\n    document.body.appendChild(this.element);\n\n    // close modal on background click\n    this.element.addEventListener('click', (el) => {\n      if (el.target.className === 'modal') {\n        this.close();\n      }\n    });\n\n    // add self (this modal instance) to the modal service so it's accessible from controllers\n    this.addTransactionModalService.add(this);\n  }\n\n  // remove self from modal service when component is destroyed\n  ngOnDestroy(): void {\n    this.addTransactionModalService.remove(this.id);\n    this.element.remove();\n  }\n\n  // open modal\n  open(): void {\n    this.element.style.display = 'block';\n    document.body.classList.add('modal-open');\n  }\n\n  // close modal\n  close(): void {\n    this.element.style.display = 'none';\n    document.body.classList.remove('modal-open');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class AddTransactionModalService {\n  private modals: any[] = [];\n\n  add(modal: any) {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    // remove modal from array of active modals\n    this.modals = this.modals.filter((x) => x.id !== id);\n  }\n\n  open(id: string) {\n    // open modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.open();\n  }\n\n  close(id: string) {\n    // close modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.close();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n@Component({\n  selector: 'app-clickable-list-view',\n  template: `\n    <a href=\"{{ link }}\">\n      <div class=\"clickable-list\">\n        <div class=\"space-between\">\n          <p>{{ name }}</p>\n          <p>\\${{ amount }}</p>\n        </div>\n      </div>\n    </a>\n  `,\n  styles: [\n    `\n      div {\n        background: #efefef;\n        width: 90%;\n        padding: 1rem;\n        border-radius: 0.625rem;\n      }\n\n      .space-between {\n        display: flex;\n        justify-content: space-between;\n      }\n    `,\n  ],\n})\nexport class ClickableListViewComponent implements OnInit {\n  @Input() link: string;\n  @Input() amount: string;\n  @Input() name: string;\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n@Component({\n  selector: 'app-emptycontent',\n  template: `\n    <div class=\"wrapper\">\n      <img src=\"../../assets/empty.svg\" rel=\"icon\" alt=\"\" class=\"emptyicon\" />\n      <br />\n\n      <div class=\"row\">\n        <h3>{{ emptyHeader }}</h3>\n      </div>\n      <br />\n      <p class=\"space\">{{ emptyPar }}</p>\n    </div>\n  `,\n  styles: [\n    `\n      .emptyicon {\n        padding-left: 3rem;\n      }\n\n      .wrapper {\n        display: flex;\n        flex-direction: column;\n        padding: 4rem;\n        align-items: center;\n      }\n    `,\n  ],\n})\nexport class EmptyContentComponent implements OnInit {\n  @Input() emptyHeader: string;\n  @Input() emptyPar: string;\n\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header-component',\n  template: `\n    <div class=\"row hero\">\n      <div class=\"column center\">\n        <div class=\"row\">\n          <img src=\"../../assets/logo.svg\" rel=\"icon\" alt=\"\" class=\"logo\" />\n          <h1 class=\"fin\">{{ maintitle }}</h1>\n        </div>\n        <p class=\"tag-line\">{{ tagline }}</p>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .hero {\n        align-items: center;\n        background: var(--fin-gradient);\n        border-radius: 0rem 0rem 2rem 2rem;\n        justify-content: center;\n        padding: 6rem;\n      }\n\n      .fin {\n        color: var(--fin-white);\n        font-family: 'Courgette', cursive;\n        font-size: 4rem;\n        text-shadow: 0rem 0.125rem rgb(0 0 0 / 16%);\n        font-weight: 300;\n      }\n\n      .tag-line {\n        color: var(--fin-white);\n      }\n\n      img {\n        padding-right: 1rem;\n        width: 9.813rem;\n        height: 5.188rem;\n      }\n    `,\n  ],\n})\nexport class HeaderComponent implements OnInit {\n  @Input() maintitle: string;\n  @Input() tagline: string;\n\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ModalService } from './help-modal.service';\n\n@Component({\n  selector: 'app-help-modal-button-component',\n  template: `\n    <button class=\"btn-help\" (click)=\"openModal('custom-modal-1')\">?</button>\n\n    <app-modal-component id=\"custom-modal-1\">\n      <div class=\"float-right\">\n        <button class=\"secondary\" (click)=\"closeModal('custom-modal-1')\">\n          X\n        </button>\n      </div>\n      <p class=\"modaltext\">{{ modaltext }}</p>\n      <ng-content></ng-content>\n    </app-modal-component>\n  `,\n  styles: [\n    `\n      .float-right {\n        float: right;\n      }\n\n      .modaltext {\n        padding: 4rem;\n      }\n    `,\n  ],\n})\nexport class HelpModalButtonComponent implements OnInit {\n  @Input() modaltext: string;\n  constructor(private modalService: ModalService) {}\n\n  ngOnInit(): void {}\n\n  openModal(id: string) {\n    this.modalService.open(id);\n  }\n\n  closeModal(id: string) {\n    this.modalService.close(id);\n  }\n}\n","import {\n  Component,\n  ViewEncapsulation,\n  ElementRef,\n  Input,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { ModalService } from './help-modal.service';\n\n@Component({\n  selector: 'app-modal-component',\n  template: `\n    <div class=\"modal\">\n      <div class=\"modal-body\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n    <div class=\"modal-background\"></div>\n  `,\n  styles: [\n    `\n      modal {\n        display: none;\n      }\n      .modal {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 1000;\n        overflow: auto;\n      }\n      .modal .modal-body {\n        padding: 1.25rem;\n        background: #fff;\n        margin: 16rem;\n        border-radius: 0.625rem;\n        min-height: 20rem;\n        max-width: 80rem;\n      }\n      .modal-background {\n        position: fixed;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: var(--fin-black-transparent);\n        opacity: 0.75;\n        z-index: 900;\n      }\n      body.modal-open {\n        overflow: hidden;\n      }\n    `,\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class ModalComponent implements OnInit, OnDestroy {\n  @Input() id: string;\n  private element: any;\n\n  constructor(private modalService: ModalService, private el: ElementRef) {\n    this.element = el.nativeElement;\n  }\n\n  ngOnInit(): void {\n    // ensure id attribute exists\n    if (!this.id) {\n      console.error('modal must have an id');\n      return;\n    }\n\n    // move element to bottom of page (just before </body>) so it can be displayed above everything else\n    document.body.appendChild(this.element);\n\n    // close modal on background click\n    this.element.addEventListener('click', (el) => {\n      if (el.target.className === 'modal') {\n        this.close();\n      }\n    });\n\n    // add self (this modal instance) to the modal service so it's accessible from controllers\n    this.modalService.add(this);\n  }\n\n  // remove self from modal service when component is destroyed\n  ngOnDestroy(): void {\n    this.modalService.remove(this.id);\n    this.element.remove();\n  }\n\n  // open modal\n  open(): void {\n    this.element.style.display = 'block';\n    document.body.classList.add('modal-open');\n  }\n\n  // close modal\n  close(): void {\n    this.element.style.display = 'none';\n    document.body.classList.remove('modal-open');\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ModalService {\n  private modals: any[] = [];\n\n  add(modal: any) {\n    // add modal to array of active modals\n    this.modals.push(modal);\n  }\n\n  remove(id: string) {\n    // remove modal from array of active modals\n    this.modals = this.modals.filter((x) => x.id !== id);\n  }\n\n  open(id: string) {\n    // open modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.open();\n  }\n\n  close(id: string) {\n    // close modal specified by id\n    const modal = this.modals.find((x) => x.id === id);\n    modal.close();\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-input-component',\n  template: `\n    <label>{{ label }}</label>\n\n    <input\n      placeholder=\"{{ placeholder }}\"\n      type=\"{{ type }}\"\n      name=\"{{ name }}\"\n      required=\"{{ required }}\"\n      min=\"{{ min }}\"\n      id=\"{{ id }}\"\n    />\n  `,\n\n  styles: [\n    `\n      label {\n        color: var(--fin-neutral-1);\n      }\n\n      input {\n        border-radius: 20rem;\n        font-size: 1rem;\n        height: 1.5rem;\n        min-width: 15rem;\n        width: 100%;\n        padding: 0.75rem 1rem;\n        border: 0.063rem solid var(--fin-white);\n        margin: 0.5rem 0;\n        background: var(--fin-neutral-6);\n        color: var(--fin-neutral-1);\n      }\n\n      input[type='checkbox'],\n      input[type='radio'] {\n        width: 1.2rem;\n        height: 1.2rem;\n        margin-top: 0.3rem;\n      }\n\n      input[type='date'] {\n        font-family: Inter, sans-serif;\n      }\n\n      input:focus {\n        outline: none;\n        box-shadow: 0rem 0rem 0.313rem var(--fin-blue-1);\n      }\n    `,\n  ],\n})\nexport class InputComponent implements OnInit {\n  @Input() label: string;\n  @Input() placeholder: string;\n  @Input() type: string;\n  @Input() name: string;\n  @Input() required: string;\n  @Input() min: number;\n  @Input() id: string;\n  constructor() {}\n  ngOnInit(): void {}\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar-component',\n  template: `\n    <div class=\"row navbar\">\n      <div class=\"column center\">\n        <img src=\"../../assets/logo.svg\" rel=\"icon\" alt=\"\" class=\"logo\" />\n      </div>\n\n      <h3 *ngIf=\"!userData\" class=\"name\">Welcome!</h3>\n      <h3 *ngIf=\"userData\" class=\"name\">Welcome {{ this.userData }}!</h3>\n\n      <ul class=\"nav navbar-nav navbar-right\">\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"/addAccounts\">\n            <p class=\"white-text\">Add Accounts</p>\n          </a>\n        </li>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a routerLink=\"/manageAccounts\">\n            <p class=\"white-text\">Manage Accounts</p>\n          </a>\n        </li>\n\n        <div style=\"width:2rem; border-right:0.05rem solid white;\"></div>\n        <li class=\"nav-item\" routerLinkActive=\"active\">\n          <a href=\"/\">\n            <i class=\"fa fa-power-off\"></i>\n            <p class=\"white-text\">Logout</p>\n          </a>\n        </li>\n      </ul>\n    </div>\n  `,\n  styles: [\n    `\n      .logo {\n        width: 8rem;\n        height: 8rem;\n      }\n      .name {\n        width: 100%;\n        color: var(--fin-white);\n        font-weight: normal;\n      }\n\n      .profilelogo {\n        width: 3rem;\n        height: 3rem;\n      }\n      .navbar {\n        align-items: center;\n        background: var(--fin-gradient);\n        border-radius: 0rem 0rem 2rem 2rem;\n        min-width: 39.6875rem;\n      }\n\n      .nav {\n        padding-left: 0;\n        margin-bottom: 0;\n        list-style: none;\n        width: 50rem;\n      }\n\n      .nav > li > a {\n        position: relative;\n        display: block;\n        padding: 0.625rem 0.9375rem;\n      }\n\n      .active {\n        text-decoration: none;\n        background-color: rgba(255, 255, 255, 0.2);\n        border-radius: 0.625rem;\n      }\n\n      .navbar-nav > li > a {\n        padding-top: 0.9375rem;\n        padding-bottom: 0.9375rem;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n      }\n      .navbar-right {\n        float: right;\n        display: flex;\n        justify-content: flex-end;\n        width: 95rem;\n      }\n\n      .white-text {\n        color: white;\n      }\n    `,\n  ],\n})\nexport class NavbarComponent implements OnInit {\n  @Input('childToMaster') userData: string;\n\n  ngOnInit() {}\n}\n","/**\n * A single tab page. It renders the passed template\n * via the @Input properties by using the ngTemplateOutlet\n * and ngTemplateOutletContext directives.\n */\n\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-tab-component',\n  styles: [\n    `\n      .pane {\n        padding: 1em;\n      }\n    `,\n  ],\n  template: `\n    <div [hidden]=\"!active\" class=\"pane\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class TabComponent {\n  @Input() title: string;\n  @Input() active = false;\n}\n","/**\n * The main component that renders single TabComponent\n * instances.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n} from '@angular/core';\n\nimport { TabComponent } from './tab.component';\n\n@Component({\n  selector: 'app-tabs-component',\n  template: `\n    <ul class=\"nav nav-tabs\">\n      <li\n        *ngFor=\"let tab of tabs\"\n        (click)=\"selectTab(tab)\"\n        [class.active]=\"tab.active\"\n      >\n        <a href=\"tab\">{{ tab.title }}</a>\n      </li>\n    </ul>\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      .tab-close {\n        color: gray;\n        text-align: right;\n        cursor: pointer;\n      }\n    `,\n  ],\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabComponent) tabs: QueryList<TabComponent>;\n\n  // contentChildren are set\n  ngAfterContentInit() {\n    // get all active tabs\n    const activeTabs = this.tabs.filter((tab) => tab.active);\n\n    // if there is no active tab set, activate the first\n    if (activeTabs.length === 0) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: TabComponent) {\n    // deactivate all tabs\n    this.tabs.toArray().forEach((tab) => (tab.active = false));\n\n    // activate the tab the user has clicked on.\n    tab.active = true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\nexport const userId = 1;\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}